Terminals unused in grammar

    NL


Grammar

    0 $accept: program $end

    1 program: stmt_list

    2 stmt_list: %empty
    3          | stmt SC stmt_list
    4          | COMMENT stmt_list
    5          | halil stmt_list

    6 halil: if_stmt
    7      | while_stmt
    8      | for_stmt
    9      | func_dec_stmt

   10 stmt: assign_stmt
   11     | declaration_stmt
   12     | output_exp
   13     | expression_stmt
   14     | return_stmt

   15 block: LCB stmt_list RCB

   16 assign_stmt: IDENTIFIER ASSIGN expression_stmt
   17            | IDENTIFIER LSB expression_stmt RSB ASSIGN expression_stmt

   18 declaration_stmt: dec_w_assign
   19                 | dec_wo_assign

   20 dec_w_assign: INT assign_stmt
   21             | INT_ARR IDENTIFIER LSB expression_stmt RSB ASSIGN int_arr

   22 dec_wo_assign: INT IDENTIFIER
   23              | INT_ARR IDENTIFIER LSB expression_stmt RSB

   24 return_stmt: RETURN expression_stmt

   25 expression_stmt: arit_expr

   26 if_stmt: IF LP expression_stmt RP block
   27        | IF LP expression_stmt RP block ELSE block

   28 while_stmt: WHILE LP expression_stmt RP block

   29 for_stmt: FOR LP dec_w_assign SC expression_stmt SC assign_stmt RP block
   30         | FOR LP assign_stmt SC expression_stmt SC assign_stmt RP block

   31 arit_expr: arit_expr OR l7_expr
   32          | l7_expr

   33 l7_expr: l7_expr AND l6_expr
   34        | l6_expr

   35 l6_expr: l6_expr EQ l5_expr
   36        | l6_expr NOTEQ l5_expr
   37        | l5_expr

   38 l5_expr: l5_expr LT l4_expr
   39        | l5_expr LTE l4_expr
   40        | l5_expr GT l4_expr
   41        | l5_expr GTE l4_expr
   42        | l4_expr

   43 l4_expr: l4_expr PLUS l3_expr
   44        | l4_expr MINUS l3_expr
   45        | l3_expr

   46 l3_expr: NOT l3_expr
   47        | l2_expr

   48 l2_expr: l2_expr MUL l1_expr
   49        | l2_expr DIV l1_expr
   50        | l2_expr MOD l1_expr
   51        | l1_expr

   52 l1_expr: l1_expr EXP l0_expr
   53        | l0_expr

   54 l0_expr: LP arit_expr RP
   55        | IDENTIFIER
   56        | signed_int
   57        | func_call
   58        | input_exp
   59        | IDENTIFIER LSB expression_stmt RSB

   60 input_exp: READ LP RP

   61 output_exp: ECHO LP STR RP
   62           | ECHO LP expression_stmt RP

   63 func_dec_stmt: FUNC IDENTIFIER LP fd_parameters RP block

   64 func_call: IDENTIFIER LP fc_parameters RP

   65 params: INT IDENTIFIER
   66       | INT_ARR IDENTIFIER LSB RSB
   67       | INT IDENTIFIER COMMA fd_parameters
   68       | INT_ARR IDENTIFIER LSB RSB COMMA fd_parameters

   69 fd_parameters: %empty
   70              | params

   71 fc_parameters: %empty
   72              | expression_stmt
   73              | expression_stmt COMMA fc_parameters

   74 int_arr: LSB integer_group RSB

   75 integer_group: signed_int
   76              | signed_int COMMA integer_group

   77 signed_int: pos_int
   78           | neg_int

   79 neg_int: MINUS CONST

   80 pos_int: PLUS CONST
   81        | CONST


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INT (258) 20 22 65 67
    INT_ARR (259) 21 23 66 68
    FUNC (260) 63
    ECHO (261) 61 62
    READ (262) 60
    IF (263) 26 27
    ELSE (264) 27
    RETURN (265) 24
    FOR (266) 29 30
    WHILE (267) 28
    IDENTIFIER (268) 16 17 21 22 23 55 59 63 64 65 66 67 68
    SC (269) 3 29 30
    LP (270) 26 27 28 29 30 54 60 61 62 63 64
    RP (271) 26 27 28 29 30 54 60 61 62 63 64
    LSB (272) 17 21 23 59 66 68 74
    RSB (273) 17 21 23 59 66 68 74
    LCB (274) 15
    RCB (275) 15
    COMMA (276) 67 68 73 76
    NOT (277) 46
    PLUS (278) 43 80
    MINUS (279) 44 79
    MUL (280) 48
    DIV (281) 49
    MOD (282) 50
    EXP (283) 52
    OR (284) 31
    AND (285) 33
    EQ (286) 35
    NOTEQ (287) 36
    LTE (288) 39
    GTE (289) 41
    LT (290) 38
    GT (291) 40
    ASSIGN (292) 16 17 21
    CONST (293) 79 80 81
    STR (294) 61
    COMMENT (295) 4
    NL (296)


Nonterminals, with rules where they appear

    $accept (42)
        on left: 0
    program (43)
        on left: 1
        on right: 0
    stmt_list (44)
        on left: 2 3 4 5
        on right: 1 3 4 5 15
    halil (45)
        on left: 6 7 8 9
        on right: 5
    stmt (46)
        on left: 10 11 12 13 14
        on right: 3
    block (47)
        on left: 15
        on right: 26 27 28 29 30 63
    assign_stmt (48)
        on left: 16 17
        on right: 10 20 29 30
    declaration_stmt (49)
        on left: 18 19
        on right: 11
    dec_w_assign (50)
        on left: 20 21
        on right: 18 29
    dec_wo_assign (51)
        on left: 22 23
        on right: 19
    return_stmt (52)
        on left: 24
        on right: 14
    expression_stmt (53)
        on left: 25
        on right: 13 16 17 21 23 24 26 27 28 29 30 59 62 72 73
    if_stmt (54)
        on left: 26 27
        on right: 6
    while_stmt (55)
        on left: 28
        on right: 7
    for_stmt (56)
        on left: 29 30
        on right: 8
    arit_expr (57)
        on left: 31 32
        on right: 25 31 54
    l7_expr (58)
        on left: 33 34
        on right: 31 32 33
    l6_expr (59)
        on left: 35 36 37
        on right: 33 34 35 36
    l5_expr (60)
        on left: 38 39 40 41 42
        on right: 35 36 37 38 39 40 41
    l4_expr (61)
        on left: 43 44 45
        on right: 38 39 40 41 42 43 44
    l3_expr (62)
        on left: 46 47
        on right: 43 44 45 46
    l2_expr (63)
        on left: 48 49 50 51
        on right: 47 48 49 50
    l1_expr (64)
        on left: 52 53
        on right: 48 49 50 51 52
    l0_expr (65)
        on left: 54 55 56 57 58 59
        on right: 52 53
    input_exp (66)
        on left: 60
        on right: 58
    output_exp (67)
        on left: 61 62
        on right: 12
    func_dec_stmt (68)
        on left: 63
        on right: 9
    func_call (69)
        on left: 64
        on right: 57
    params (70)
        on left: 65 66 67 68
        on right: 70
    fd_parameters (71)
        on left: 69 70
        on right: 63 67 68
    fc_parameters (72)
        on left: 71 72 73
        on right: 64 73
    int_arr (73)
        on left: 74
        on right: 21
    integer_group (74)
        on left: 75 76
        on right: 74 76
    signed_int (75)
        on left: 77 78
        on right: 56 75 76
    neg_int (76)
        on left: 79
        on right: 78
    pos_int (77)
        on left: 80 81
        on right: 77


State 0

    0 $accept: . program $end

    INT         shift, and go to state 1
    INT_ARR     shift, and go to state 2
    FUNC        shift, and go to state 3
    ECHO        shift, and go to state 4
    READ        shift, and go to state 5
    IF          shift, and go to state 6
    RETURN      shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15
    COMMENT     shift, and go to state 16

    $default  reduce using rule 2 (stmt_list)

    program           go to state 17
    stmt_list         go to state 18
    halil             go to state 19
    stmt              go to state 20
    assign_stmt       go to state 21
    declaration_stmt  go to state 22
    dec_w_assign      go to state 23
    dec_wo_assign     go to state 24
    return_stmt       go to state 25
    expression_stmt   go to state 26
    if_stmt           go to state 27
    while_stmt        go to state 28
    for_stmt          go to state 29
    arit_expr         go to state 30
    l7_expr           go to state 31
    l6_expr           go to state 32
    l5_expr           go to state 33
    l4_expr           go to state 34
    l3_expr           go to state 35
    l2_expr           go to state 36
    l1_expr           go to state 37
    l0_expr           go to state 38
    input_exp         go to state 39
    output_exp        go to state 40
    func_dec_stmt     go to state 41
    func_call         go to state 42
    signed_int        go to state 43
    neg_int           go to state 44
    pos_int           go to state 45


State 1

   20 dec_w_assign: INT . assign_stmt
   22 dec_wo_assign: INT . IDENTIFIER

    IDENTIFIER  shift, and go to state 46

    assign_stmt  go to state 47


State 2

   21 dec_w_assign: INT_ARR . IDENTIFIER LSB expression_stmt RSB ASSIGN int_arr
   23 dec_wo_assign: INT_ARR . IDENTIFIER LSB expression_stmt RSB

    IDENTIFIER  shift, and go to state 48


State 3

   63 func_dec_stmt: FUNC . IDENTIFIER LP fd_parameters RP block

    IDENTIFIER  shift, and go to state 49


State 4

   61 output_exp: ECHO . LP STR RP
   62           | ECHO . LP expression_stmt RP

    LP  shift, and go to state 50


State 5

   60 input_exp: READ . LP RP

    LP  shift, and go to state 51


State 6

   26 if_stmt: IF . LP expression_stmt RP block
   27        | IF . LP expression_stmt RP block ELSE block

    LP  shift, and go to state 52


State 7

   24 return_stmt: RETURN . expression_stmt

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 54
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 8

   29 for_stmt: FOR . LP dec_w_assign SC expression_stmt SC assign_stmt RP block
   30         | FOR . LP assign_stmt SC expression_stmt SC assign_stmt RP block

    LP  shift, and go to state 55


State 9

   28 while_stmt: WHILE . LP expression_stmt RP block

    LP  shift, and go to state 56


State 10

   16 assign_stmt: IDENTIFIER . ASSIGN expression_stmt
   17            | IDENTIFIER . LSB expression_stmt RSB ASSIGN expression_stmt
   55 l0_expr: IDENTIFIER .
   59        | IDENTIFIER . LSB expression_stmt RSB
   64 func_call: IDENTIFIER . LP fc_parameters RP

    LP      shift, and go to state 57
    LSB     shift, and go to state 58
    ASSIGN  shift, and go to state 59

    $default  reduce using rule 55 (l0_expr)


State 11

   54 l0_expr: LP . arit_expr RP

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    arit_expr   go to state 60
    l7_expr     go to state 31
    l6_expr     go to state 32
    l5_expr     go to state 33
    l4_expr     go to state 34
    l3_expr     go to state 35
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 12

   46 l3_expr: NOT . l3_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l3_expr     go to state 61
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 13

   80 pos_int: PLUS . CONST

    CONST  shift, and go to state 62


State 14

   79 neg_int: MINUS . CONST

    CONST  shift, and go to state 63


State 15

   81 pos_int: CONST .

    $default  reduce using rule 81 (pos_int)


State 16

    4 stmt_list: COMMENT . stmt_list

    INT         shift, and go to state 1
    INT_ARR     shift, and go to state 2
    FUNC        shift, and go to state 3
    ECHO        shift, and go to state 4
    READ        shift, and go to state 5
    IF          shift, and go to state 6
    RETURN      shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15
    COMMENT     shift, and go to state 16

    $default  reduce using rule 2 (stmt_list)

    stmt_list         go to state 64
    halil             go to state 19
    stmt              go to state 20
    assign_stmt       go to state 21
    declaration_stmt  go to state 22
    dec_w_assign      go to state 23
    dec_wo_assign     go to state 24
    return_stmt       go to state 25
    expression_stmt   go to state 26
    if_stmt           go to state 27
    while_stmt        go to state 28
    for_stmt          go to state 29
    arit_expr         go to state 30
    l7_expr           go to state 31
    l6_expr           go to state 32
    l5_expr           go to state 33
    l4_expr           go to state 34
    l3_expr           go to state 35
    l2_expr           go to state 36
    l1_expr           go to state 37
    l0_expr           go to state 38
    input_exp         go to state 39
    output_exp        go to state 40
    func_dec_stmt     go to state 41
    func_call         go to state 42
    signed_int        go to state 43
    neg_int           go to state 44
    pos_int           go to state 45


State 17

    0 $accept: program . $end

    $end  shift, and go to state 65


State 18

    1 program: stmt_list .

    $default  reduce using rule 1 (program)


State 19

    5 stmt_list: halil . stmt_list

    INT         shift, and go to state 1
    INT_ARR     shift, and go to state 2
    FUNC        shift, and go to state 3
    ECHO        shift, and go to state 4
    READ        shift, and go to state 5
    IF          shift, and go to state 6
    RETURN      shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15
    COMMENT     shift, and go to state 16

    $default  reduce using rule 2 (stmt_list)

    stmt_list         go to state 66
    halil             go to state 19
    stmt              go to state 20
    assign_stmt       go to state 21
    declaration_stmt  go to state 22
    dec_w_assign      go to state 23
    dec_wo_assign     go to state 24
    return_stmt       go to state 25
    expression_stmt   go to state 26
    if_stmt           go to state 27
    while_stmt        go to state 28
    for_stmt          go to state 29
    arit_expr         go to state 30
    l7_expr           go to state 31
    l6_expr           go to state 32
    l5_expr           go to state 33
    l4_expr           go to state 34
    l3_expr           go to state 35
    l2_expr           go to state 36
    l1_expr           go to state 37
    l0_expr           go to state 38
    input_exp         go to state 39
    output_exp        go to state 40
    func_dec_stmt     go to state 41
    func_call         go to state 42
    signed_int        go to state 43
    neg_int           go to state 44
    pos_int           go to state 45


State 20

    3 stmt_list: stmt . SC stmt_list

    SC  shift, and go to state 67


State 21

   10 stmt: assign_stmt .

    $default  reduce using rule 10 (stmt)


State 22

   11 stmt: declaration_stmt .

    $default  reduce using rule 11 (stmt)


State 23

   18 declaration_stmt: dec_w_assign .

    $default  reduce using rule 18 (declaration_stmt)


State 24

   19 declaration_stmt: dec_wo_assign .

    $default  reduce using rule 19 (declaration_stmt)


State 25

   14 stmt: return_stmt .

    $default  reduce using rule 14 (stmt)


State 26

   13 stmt: expression_stmt .

    $default  reduce using rule 13 (stmt)


State 27

    6 halil: if_stmt .

    $default  reduce using rule 6 (halil)


State 28

    7 halil: while_stmt .

    $default  reduce using rule 7 (halil)


State 29

    8 halil: for_stmt .

    $default  reduce using rule 8 (halil)


State 30

   25 expression_stmt: arit_expr .
   31 arit_expr: arit_expr . OR l7_expr

    OR  shift, and go to state 68

    $default  reduce using rule 25 (expression_stmt)


State 31

   32 arit_expr: l7_expr .
   33 l7_expr: l7_expr . AND l6_expr

    AND  shift, and go to state 69

    $default  reduce using rule 32 (arit_expr)


State 32

   34 l7_expr: l6_expr .
   35 l6_expr: l6_expr . EQ l5_expr
   36        | l6_expr . NOTEQ l5_expr

    EQ     shift, and go to state 70
    NOTEQ  shift, and go to state 71

    $default  reduce using rule 34 (l7_expr)


State 33

   37 l6_expr: l5_expr .
   38 l5_expr: l5_expr . LT l4_expr
   39        | l5_expr . LTE l4_expr
   40        | l5_expr . GT l4_expr
   41        | l5_expr . GTE l4_expr

    LTE  shift, and go to state 72
    GTE  shift, and go to state 73
    LT   shift, and go to state 74
    GT   shift, and go to state 75

    $default  reduce using rule 37 (l6_expr)


State 34

   42 l5_expr: l4_expr .
   43 l4_expr: l4_expr . PLUS l3_expr
   44        | l4_expr . MINUS l3_expr

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 42 (l5_expr)


State 35

   45 l4_expr: l3_expr .

    $default  reduce using rule 45 (l4_expr)


State 36

   47 l3_expr: l2_expr .
   48 l2_expr: l2_expr . MUL l1_expr
   49        | l2_expr . DIV l1_expr
   50        | l2_expr . MOD l1_expr

    MUL  shift, and go to state 78
    DIV  shift, and go to state 79
    MOD  shift, and go to state 80

    $default  reduce using rule 47 (l3_expr)


State 37

   51 l2_expr: l1_expr .
   52 l1_expr: l1_expr . EXP l0_expr

    EXP  shift, and go to state 81

    $default  reduce using rule 51 (l2_expr)


State 38

   53 l1_expr: l0_expr .

    $default  reduce using rule 53 (l1_expr)


State 39

   58 l0_expr: input_exp .

    $default  reduce using rule 58 (l0_expr)


State 40

   12 stmt: output_exp .

    $default  reduce using rule 12 (stmt)


State 41

    9 halil: func_dec_stmt .

    $default  reduce using rule 9 (halil)


State 42

   57 l0_expr: func_call .

    $default  reduce using rule 57 (l0_expr)


State 43

   56 l0_expr: signed_int .

    $default  reduce using rule 56 (l0_expr)


State 44

   78 signed_int: neg_int .

    $default  reduce using rule 78 (signed_int)


State 45

   77 signed_int: pos_int .

    $default  reduce using rule 77 (signed_int)


State 46

   16 assign_stmt: IDENTIFIER . ASSIGN expression_stmt
   17            | IDENTIFIER . LSB expression_stmt RSB ASSIGN expression_stmt
   22 dec_wo_assign: INT IDENTIFIER .

    LSB     shift, and go to state 82
    ASSIGN  shift, and go to state 59

    $default  reduce using rule 22 (dec_wo_assign)


State 47

   20 dec_w_assign: INT assign_stmt .

    $default  reduce using rule 20 (dec_w_assign)


State 48

   21 dec_w_assign: INT_ARR IDENTIFIER . LSB expression_stmt RSB ASSIGN int_arr
   23 dec_wo_assign: INT_ARR IDENTIFIER . LSB expression_stmt RSB

    LSB  shift, and go to state 83


State 49

   63 func_dec_stmt: FUNC IDENTIFIER . LP fd_parameters RP block

    LP  shift, and go to state 84


State 50

   61 output_exp: ECHO LP . STR RP
   62           | ECHO LP . expression_stmt RP

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15
    STR         shift, and go to state 85

    expression_stmt  go to state 86
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 51

   60 input_exp: READ LP . RP

    RP  shift, and go to state 87


State 52

   26 if_stmt: IF LP . expression_stmt RP block
   27        | IF LP . expression_stmt RP block ELSE block

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 88
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 53

   55 l0_expr: IDENTIFIER .
   59        | IDENTIFIER . LSB expression_stmt RSB
   64 func_call: IDENTIFIER . LP fc_parameters RP

    LP   shift, and go to state 57
    LSB  shift, and go to state 89

    $default  reduce using rule 55 (l0_expr)


State 54

   24 return_stmt: RETURN expression_stmt .

    $default  reduce using rule 24 (return_stmt)


State 55

   29 for_stmt: FOR LP . dec_w_assign SC expression_stmt SC assign_stmt RP block
   30         | FOR LP . assign_stmt SC expression_stmt SC assign_stmt RP block

    INT         shift, and go to state 90
    INT_ARR     shift, and go to state 91
    IDENTIFIER  shift, and go to state 92

    assign_stmt   go to state 93
    dec_w_assign  go to state 94


State 56

   28 while_stmt: WHILE LP . expression_stmt RP block

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 95
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 57

   64 func_call: IDENTIFIER LP . fc_parameters RP

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    $default  reduce using rule 71 (fc_parameters)

    expression_stmt  go to state 96
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    fc_parameters    go to state 97
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 58

   17 assign_stmt: IDENTIFIER LSB . expression_stmt RSB ASSIGN expression_stmt
   59 l0_expr: IDENTIFIER LSB . expression_stmt RSB

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 98
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 59

   16 assign_stmt: IDENTIFIER ASSIGN . expression_stmt

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 99
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 60

   31 arit_expr: arit_expr . OR l7_expr
   54 l0_expr: LP arit_expr . RP

    RP  shift, and go to state 100
    OR  shift, and go to state 68


State 61

   46 l3_expr: NOT l3_expr .

    $default  reduce using rule 46 (l3_expr)


State 62

   80 pos_int: PLUS CONST .

    $default  reduce using rule 80 (pos_int)


State 63

   79 neg_int: MINUS CONST .

    $default  reduce using rule 79 (neg_int)


State 64

    4 stmt_list: COMMENT stmt_list .

    $default  reduce using rule 4 (stmt_list)


State 65

    0 $accept: program $end .

    $default  accept


State 66

    5 stmt_list: halil stmt_list .

    $default  reduce using rule 5 (stmt_list)


State 67

    3 stmt_list: stmt SC . stmt_list

    INT         shift, and go to state 1
    INT_ARR     shift, and go to state 2
    FUNC        shift, and go to state 3
    ECHO        shift, and go to state 4
    READ        shift, and go to state 5
    IF          shift, and go to state 6
    RETURN      shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15
    COMMENT     shift, and go to state 16

    $default  reduce using rule 2 (stmt_list)

    stmt_list         go to state 101
    halil             go to state 19
    stmt              go to state 20
    assign_stmt       go to state 21
    declaration_stmt  go to state 22
    dec_w_assign      go to state 23
    dec_wo_assign     go to state 24
    return_stmt       go to state 25
    expression_stmt   go to state 26
    if_stmt           go to state 27
    while_stmt        go to state 28
    for_stmt          go to state 29
    arit_expr         go to state 30
    l7_expr           go to state 31
    l6_expr           go to state 32
    l5_expr           go to state 33
    l4_expr           go to state 34
    l3_expr           go to state 35
    l2_expr           go to state 36
    l1_expr           go to state 37
    l0_expr           go to state 38
    input_exp         go to state 39
    output_exp        go to state 40
    func_dec_stmt     go to state 41
    func_call         go to state 42
    signed_int        go to state 43
    neg_int           go to state 44
    pos_int           go to state 45


State 68

   31 arit_expr: arit_expr OR . l7_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l7_expr     go to state 102
    l6_expr     go to state 32
    l5_expr     go to state 33
    l4_expr     go to state 34
    l3_expr     go to state 35
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 69

   33 l7_expr: l7_expr AND . l6_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l6_expr     go to state 103
    l5_expr     go to state 33
    l4_expr     go to state 34
    l3_expr     go to state 35
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 70

   35 l6_expr: l6_expr EQ . l5_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l5_expr     go to state 104
    l4_expr     go to state 34
    l3_expr     go to state 35
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 71

   36 l6_expr: l6_expr NOTEQ . l5_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l5_expr     go to state 105
    l4_expr     go to state 34
    l3_expr     go to state 35
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 72

   39 l5_expr: l5_expr LTE . l4_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l4_expr     go to state 106
    l3_expr     go to state 35
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 73

   41 l5_expr: l5_expr GTE . l4_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l4_expr     go to state 107
    l3_expr     go to state 35
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 74

   38 l5_expr: l5_expr LT . l4_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l4_expr     go to state 108
    l3_expr     go to state 35
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 75

   40 l5_expr: l5_expr GT . l4_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l4_expr     go to state 109
    l3_expr     go to state 35
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 76

   43 l4_expr: l4_expr PLUS . l3_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l3_expr     go to state 110
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 77

   44 l4_expr: l4_expr MINUS . l3_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l3_expr     go to state 111
    l2_expr     go to state 36
    l1_expr     go to state 37
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 78

   48 l2_expr: l2_expr MUL . l1_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l1_expr     go to state 112
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 79

   49 l2_expr: l2_expr DIV . l1_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l1_expr     go to state 113
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 80

   50 l2_expr: l2_expr MOD . l1_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l1_expr     go to state 114
    l0_expr     go to state 38
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 81

   52 l1_expr: l1_expr EXP . l0_expr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    l0_expr     go to state 115
    input_exp   go to state 39
    func_call   go to state 42
    signed_int  go to state 43
    neg_int     go to state 44
    pos_int     go to state 45


State 82

   17 assign_stmt: IDENTIFIER LSB . expression_stmt RSB ASSIGN expression_stmt

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 116
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 83

   21 dec_w_assign: INT_ARR IDENTIFIER LSB . expression_stmt RSB ASSIGN int_arr
   23 dec_wo_assign: INT_ARR IDENTIFIER LSB . expression_stmt RSB

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 117
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 84

   63 func_dec_stmt: FUNC IDENTIFIER LP . fd_parameters RP block

    INT      shift, and go to state 118
    INT_ARR  shift, and go to state 119

    $default  reduce using rule 69 (fd_parameters)

    params         go to state 120
    fd_parameters  go to state 121


State 85

   61 output_exp: ECHO LP STR . RP

    RP  shift, and go to state 122


State 86

   62 output_exp: ECHO LP expression_stmt . RP

    RP  shift, and go to state 123


State 87

   60 input_exp: READ LP RP .

    $default  reduce using rule 60 (input_exp)


State 88

   26 if_stmt: IF LP expression_stmt . RP block
   27        | IF LP expression_stmt . RP block ELSE block

    RP  shift, and go to state 124


State 89

   59 l0_expr: IDENTIFIER LSB . expression_stmt RSB

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 125
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 90

   20 dec_w_assign: INT . assign_stmt

    IDENTIFIER  shift, and go to state 92

    assign_stmt  go to state 47


State 91

   21 dec_w_assign: INT_ARR . IDENTIFIER LSB expression_stmt RSB ASSIGN int_arr

    IDENTIFIER  shift, and go to state 126


State 92

   16 assign_stmt: IDENTIFIER . ASSIGN expression_stmt
   17            | IDENTIFIER . LSB expression_stmt RSB ASSIGN expression_stmt

    LSB     shift, and go to state 82
    ASSIGN  shift, and go to state 59


State 93

   30 for_stmt: FOR LP assign_stmt . SC expression_stmt SC assign_stmt RP block

    SC  shift, and go to state 127


State 94

   29 for_stmt: FOR LP dec_w_assign . SC expression_stmt SC assign_stmt RP block

    SC  shift, and go to state 128


State 95

   28 while_stmt: WHILE LP expression_stmt . RP block

    RP  shift, and go to state 129


State 96

   72 fc_parameters: expression_stmt .
   73              | expression_stmt . COMMA fc_parameters

    COMMA  shift, and go to state 130

    $default  reduce using rule 72 (fc_parameters)


State 97

   64 func_call: IDENTIFIER LP fc_parameters . RP

    RP  shift, and go to state 131


State 98

   17 assign_stmt: IDENTIFIER LSB expression_stmt . RSB ASSIGN expression_stmt
   59 l0_expr: IDENTIFIER LSB expression_stmt . RSB

    RSB  shift, and go to state 132


State 99

   16 assign_stmt: IDENTIFIER ASSIGN expression_stmt .

    $default  reduce using rule 16 (assign_stmt)


State 100

   54 l0_expr: LP arit_expr RP .

    $default  reduce using rule 54 (l0_expr)


State 101

    3 stmt_list: stmt SC stmt_list .

    $default  reduce using rule 3 (stmt_list)


State 102

   31 arit_expr: arit_expr OR l7_expr .
   33 l7_expr: l7_expr . AND l6_expr

    AND  shift, and go to state 69

    $default  reduce using rule 31 (arit_expr)


State 103

   33 l7_expr: l7_expr AND l6_expr .
   35 l6_expr: l6_expr . EQ l5_expr
   36        | l6_expr . NOTEQ l5_expr

    EQ     shift, and go to state 70
    NOTEQ  shift, and go to state 71

    $default  reduce using rule 33 (l7_expr)


State 104

   35 l6_expr: l6_expr EQ l5_expr .
   38 l5_expr: l5_expr . LT l4_expr
   39        | l5_expr . LTE l4_expr
   40        | l5_expr . GT l4_expr
   41        | l5_expr . GTE l4_expr

    LTE  shift, and go to state 72
    GTE  shift, and go to state 73
    LT   shift, and go to state 74
    GT   shift, and go to state 75

    $default  reduce using rule 35 (l6_expr)


State 105

   36 l6_expr: l6_expr NOTEQ l5_expr .
   38 l5_expr: l5_expr . LT l4_expr
   39        | l5_expr . LTE l4_expr
   40        | l5_expr . GT l4_expr
   41        | l5_expr . GTE l4_expr

    LTE  shift, and go to state 72
    GTE  shift, and go to state 73
    LT   shift, and go to state 74
    GT   shift, and go to state 75

    $default  reduce using rule 36 (l6_expr)


State 106

   39 l5_expr: l5_expr LTE l4_expr .
   43 l4_expr: l4_expr . PLUS l3_expr
   44        | l4_expr . MINUS l3_expr

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 39 (l5_expr)


State 107

   41 l5_expr: l5_expr GTE l4_expr .
   43 l4_expr: l4_expr . PLUS l3_expr
   44        | l4_expr . MINUS l3_expr

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 41 (l5_expr)


State 108

   38 l5_expr: l5_expr LT l4_expr .
   43 l4_expr: l4_expr . PLUS l3_expr
   44        | l4_expr . MINUS l3_expr

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 38 (l5_expr)


State 109

   40 l5_expr: l5_expr GT l4_expr .
   43 l4_expr: l4_expr . PLUS l3_expr
   44        | l4_expr . MINUS l3_expr

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 40 (l5_expr)


State 110

   43 l4_expr: l4_expr PLUS l3_expr .

    $default  reduce using rule 43 (l4_expr)


State 111

   44 l4_expr: l4_expr MINUS l3_expr .

    $default  reduce using rule 44 (l4_expr)


State 112

   48 l2_expr: l2_expr MUL l1_expr .
   52 l1_expr: l1_expr . EXP l0_expr

    EXP  shift, and go to state 81

    $default  reduce using rule 48 (l2_expr)


State 113

   49 l2_expr: l2_expr DIV l1_expr .
   52 l1_expr: l1_expr . EXP l0_expr

    EXP  shift, and go to state 81

    $default  reduce using rule 49 (l2_expr)


State 114

   50 l2_expr: l2_expr MOD l1_expr .
   52 l1_expr: l1_expr . EXP l0_expr

    EXP  shift, and go to state 81

    $default  reduce using rule 50 (l2_expr)


State 115

   52 l1_expr: l1_expr EXP l0_expr .

    $default  reduce using rule 52 (l1_expr)


State 116

   17 assign_stmt: IDENTIFIER LSB expression_stmt . RSB ASSIGN expression_stmt

    RSB  shift, and go to state 133


State 117

   21 dec_w_assign: INT_ARR IDENTIFIER LSB expression_stmt . RSB ASSIGN int_arr
   23 dec_wo_assign: INT_ARR IDENTIFIER LSB expression_stmt . RSB

    RSB  shift, and go to state 134


State 118

   65 params: INT . IDENTIFIER
   67       | INT . IDENTIFIER COMMA fd_parameters

    IDENTIFIER  shift, and go to state 135


State 119

   66 params: INT_ARR . IDENTIFIER LSB RSB
   68       | INT_ARR . IDENTIFIER LSB RSB COMMA fd_parameters

    IDENTIFIER  shift, and go to state 136


State 120

   70 fd_parameters: params .

    $default  reduce using rule 70 (fd_parameters)


State 121

   63 func_dec_stmt: FUNC IDENTIFIER LP fd_parameters . RP block

    RP  shift, and go to state 137


State 122

   61 output_exp: ECHO LP STR RP .

    $default  reduce using rule 61 (output_exp)


State 123

   62 output_exp: ECHO LP expression_stmt RP .

    $default  reduce using rule 62 (output_exp)


State 124

   26 if_stmt: IF LP expression_stmt RP . block
   27        | IF LP expression_stmt RP . block ELSE block

    LCB  shift, and go to state 138

    block  go to state 139


State 125

   59 l0_expr: IDENTIFIER LSB expression_stmt . RSB

    RSB  shift, and go to state 140


State 126

   21 dec_w_assign: INT_ARR IDENTIFIER . LSB expression_stmt RSB ASSIGN int_arr

    LSB  shift, and go to state 141


State 127

   30 for_stmt: FOR LP assign_stmt SC . expression_stmt SC assign_stmt RP block

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 142
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 128

   29 for_stmt: FOR LP dec_w_assign SC . expression_stmt SC assign_stmt RP block

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 143
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 129

   28 while_stmt: WHILE LP expression_stmt RP . block

    LCB  shift, and go to state 138

    block  go to state 144


State 130

   73 fc_parameters: expression_stmt COMMA . fc_parameters

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    $default  reduce using rule 71 (fc_parameters)

    expression_stmt  go to state 96
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    fc_parameters    go to state 145
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 131

   64 func_call: IDENTIFIER LP fc_parameters RP .

    $default  reduce using rule 64 (func_call)


State 132

   17 assign_stmt: IDENTIFIER LSB expression_stmt RSB . ASSIGN expression_stmt
   59 l0_expr: IDENTIFIER LSB expression_stmt RSB .

    ASSIGN  shift, and go to state 146

    $default  reduce using rule 59 (l0_expr)


State 133

   17 assign_stmt: IDENTIFIER LSB expression_stmt RSB . ASSIGN expression_stmt

    ASSIGN  shift, and go to state 146


State 134

   21 dec_w_assign: INT_ARR IDENTIFIER LSB expression_stmt RSB . ASSIGN int_arr
   23 dec_wo_assign: INT_ARR IDENTIFIER LSB expression_stmt RSB .

    ASSIGN  shift, and go to state 147

    $default  reduce using rule 23 (dec_wo_assign)


State 135

   65 params: INT IDENTIFIER .
   67       | INT IDENTIFIER . COMMA fd_parameters

    COMMA  shift, and go to state 148

    $default  reduce using rule 65 (params)


State 136

   66 params: INT_ARR IDENTIFIER . LSB RSB
   68       | INT_ARR IDENTIFIER . LSB RSB COMMA fd_parameters

    LSB  shift, and go to state 149


State 137

   63 func_dec_stmt: FUNC IDENTIFIER LP fd_parameters RP . block

    LCB  shift, and go to state 138

    block  go to state 150


State 138

   15 block: LCB . stmt_list RCB

    INT         shift, and go to state 1
    INT_ARR     shift, and go to state 2
    FUNC        shift, and go to state 3
    ECHO        shift, and go to state 4
    READ        shift, and go to state 5
    IF          shift, and go to state 6
    RETURN      shift, and go to state 7
    FOR         shift, and go to state 8
    WHILE       shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15
    COMMENT     shift, and go to state 16

    $default  reduce using rule 2 (stmt_list)

    stmt_list         go to state 151
    halil             go to state 19
    stmt              go to state 20
    assign_stmt       go to state 21
    declaration_stmt  go to state 22
    dec_w_assign      go to state 23
    dec_wo_assign     go to state 24
    return_stmt       go to state 25
    expression_stmt   go to state 26
    if_stmt           go to state 27
    while_stmt        go to state 28
    for_stmt          go to state 29
    arit_expr         go to state 30
    l7_expr           go to state 31
    l6_expr           go to state 32
    l5_expr           go to state 33
    l4_expr           go to state 34
    l3_expr           go to state 35
    l2_expr           go to state 36
    l1_expr           go to state 37
    l0_expr           go to state 38
    input_exp         go to state 39
    output_exp        go to state 40
    func_dec_stmt     go to state 41
    func_call         go to state 42
    signed_int        go to state 43
    neg_int           go to state 44
    pos_int           go to state 45


State 139

   26 if_stmt: IF LP expression_stmt RP block .
   27        | IF LP expression_stmt RP block . ELSE block

    ELSE  shift, and go to state 152

    $default  reduce using rule 26 (if_stmt)


State 140

   59 l0_expr: IDENTIFIER LSB expression_stmt RSB .

    $default  reduce using rule 59 (l0_expr)


State 141

   21 dec_w_assign: INT_ARR IDENTIFIER LSB . expression_stmt RSB ASSIGN int_arr

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 153
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 142

   30 for_stmt: FOR LP assign_stmt SC expression_stmt . SC assign_stmt RP block

    SC  shift, and go to state 154


State 143

   29 for_stmt: FOR LP dec_w_assign SC expression_stmt . SC assign_stmt RP block

    SC  shift, and go to state 155


State 144

   28 while_stmt: WHILE LP expression_stmt RP block .

    $default  reduce using rule 28 (while_stmt)


State 145

   73 fc_parameters: expression_stmt COMMA fc_parameters .

    $default  reduce using rule 73 (fc_parameters)


State 146

   17 assign_stmt: IDENTIFIER LSB expression_stmt RSB ASSIGN . expression_stmt

    READ        shift, and go to state 5
    IDENTIFIER  shift, and go to state 53
    LP          shift, and go to state 11
    NOT         shift, and go to state 12
    PLUS        shift, and go to state 13
    MINUS       shift, and go to state 14
    CONST       shift, and go to state 15

    expression_stmt  go to state 156
    arit_expr        go to state 30
    l7_expr          go to state 31
    l6_expr          go to state 32
    l5_expr          go to state 33
    l4_expr          go to state 34
    l3_expr          go to state 35
    l2_expr          go to state 36
    l1_expr          go to state 37
    l0_expr          go to state 38
    input_exp        go to state 39
    func_call        go to state 42
    signed_int       go to state 43
    neg_int          go to state 44
    pos_int          go to state 45


State 147

   21 dec_w_assign: INT_ARR IDENTIFIER LSB expression_stmt RSB ASSIGN . int_arr

    LSB  shift, and go to state 157

    int_arr  go to state 158


State 148

   67 params: INT IDENTIFIER COMMA . fd_parameters

    INT      shift, and go to state 118
    INT_ARR  shift, and go to state 119

    $default  reduce using rule 69 (fd_parameters)

    params         go to state 120
    fd_parameters  go to state 159


State 149

   66 params: INT_ARR IDENTIFIER LSB . RSB
   68       | INT_ARR IDENTIFIER LSB . RSB COMMA fd_parameters

    RSB  shift, and go to state 160


State 150

   63 func_dec_stmt: FUNC IDENTIFIER LP fd_parameters RP block .

    $default  reduce using rule 63 (func_dec_stmt)


State 151

   15 block: LCB stmt_list . RCB

    RCB  shift, and go to state 161


State 152

   27 if_stmt: IF LP expression_stmt RP block ELSE . block

    LCB  shift, and go to state 138

    block  go to state 162


State 153

   21 dec_w_assign: INT_ARR IDENTIFIER LSB expression_stmt . RSB ASSIGN int_arr

    RSB  shift, and go to state 163


State 154

   30 for_stmt: FOR LP assign_stmt SC expression_stmt SC . assign_stmt RP block

    IDENTIFIER  shift, and go to state 92

    assign_stmt  go to state 164


State 155

   29 for_stmt: FOR LP dec_w_assign SC expression_stmt SC . assign_stmt RP block

    IDENTIFIER  shift, and go to state 92

    assign_stmt  go to state 165


State 156

   17 assign_stmt: IDENTIFIER LSB expression_stmt RSB ASSIGN expression_stmt .

    $default  reduce using rule 17 (assign_stmt)


State 157

   74 int_arr: LSB . integer_group RSB

    PLUS   shift, and go to state 13
    MINUS  shift, and go to state 14
    CONST  shift, and go to state 15

    integer_group  go to state 166
    signed_int     go to state 167
    neg_int        go to state 44
    pos_int        go to state 45


State 158

   21 dec_w_assign: INT_ARR IDENTIFIER LSB expression_stmt RSB ASSIGN int_arr .

    $default  reduce using rule 21 (dec_w_assign)


State 159

   67 params: INT IDENTIFIER COMMA fd_parameters .

    $default  reduce using rule 67 (params)


State 160

   66 params: INT_ARR IDENTIFIER LSB RSB .
   68       | INT_ARR IDENTIFIER LSB RSB . COMMA fd_parameters

    COMMA  shift, and go to state 168

    $default  reduce using rule 66 (params)


State 161

   15 block: LCB stmt_list RCB .

    $default  reduce using rule 15 (block)


State 162

   27 if_stmt: IF LP expression_stmt RP block ELSE block .

    $default  reduce using rule 27 (if_stmt)


State 163

   21 dec_w_assign: INT_ARR IDENTIFIER LSB expression_stmt RSB . ASSIGN int_arr

    ASSIGN  shift, and go to state 147


State 164

   30 for_stmt: FOR LP assign_stmt SC expression_stmt SC assign_stmt . RP block

    RP  shift, and go to state 169


State 165

   29 for_stmt: FOR LP dec_w_assign SC expression_stmt SC assign_stmt . RP block

    RP  shift, and go to state 170


State 166

   74 int_arr: LSB integer_group . RSB

    RSB  shift, and go to state 171


State 167

   75 integer_group: signed_int .
   76              | signed_int . COMMA integer_group

    COMMA  shift, and go to state 172

    $default  reduce using rule 75 (integer_group)


State 168

   68 params: INT_ARR IDENTIFIER LSB RSB COMMA . fd_parameters

    INT      shift, and go to state 118
    INT_ARR  shift, and go to state 119

    $default  reduce using rule 69 (fd_parameters)

    params         go to state 120
    fd_parameters  go to state 173


State 169

   30 for_stmt: FOR LP assign_stmt SC expression_stmt SC assign_stmt RP . block

    LCB  shift, and go to state 138

    block  go to state 174


State 170

   29 for_stmt: FOR LP dec_w_assign SC expression_stmt SC assign_stmt RP . block

    LCB  shift, and go to state 138

    block  go to state 175


State 171

   74 int_arr: LSB integer_group RSB .

    $default  reduce using rule 74 (int_arr)


State 172

   76 integer_group: signed_int COMMA . integer_group

    PLUS   shift, and go to state 13
    MINUS  shift, and go to state 14
    CONST  shift, and go to state 15

    integer_group  go to state 176
    signed_int     go to state 167
    neg_int        go to state 44
    pos_int        go to state 45


State 173

   68 params: INT_ARR IDENTIFIER LSB RSB COMMA fd_parameters .

    $default  reduce using rule 68 (params)


State 174

   30 for_stmt: FOR LP assign_stmt SC expression_stmt SC assign_stmt RP block .

    $default  reduce using rule 30 (for_stmt)


State 175

   29 for_stmt: FOR LP dec_w_assign SC expression_stmt SC assign_stmt RP block .

    $default  reduce using rule 29 (for_stmt)


State 176

   76 integer_group: signed_int COMMA integer_group .

    $default  reduce using rule 76 (integer_group)
